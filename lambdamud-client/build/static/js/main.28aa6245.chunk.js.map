{"version":3,"sources":["components/Register.js","components/Game.js","components/Authenticate.js","App.js","index.js"],"names":["Register","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeHandler","event","setState","defineProperty","target","name","value","password1Toggle","state","password1Tag","password1State","password2Toggle","password2Tag","password2State","submitRegister","preventDefault","password1","password2","axios","post","username","then","response","console","log","data","login","key","catch","error","alert","history","push","react_default","a","createElement","className","onSubmit","type","placeholder","onChange","onClick","Link","to","React","Component","Game","componentDidMount","token","localStorage","getItem","get","headers","Authorization","concat","movesLog","title","description","players","uuid","currentRoom","pusher","Pusher","cluster","channel","subscribe","channelSubbed","bind","toConsumableArray","message","parseCommand","input","toLowerCase","handleMove","startsWith","handleSay","slice","handleShout","whisperArr","split","whisperMinus","shift","join","handleWhisper","handleHelp","handleMap","direction","Content-Type","error_msg","err","toUser","test","currentRoome","toggleFlicker","isFlickering","flickerClass","flickerTag","reverse","map","move","length","autocomplete","logout","Authenticate","App","_React$Component","_class2","passwordToggle","passwordTag","passwordState","handleLogin","password","inherits","createClass","loggedIn","setItem","handleLogout","removeItem","_this2","Route","path","render","components_Game","assign","AuthenticatedApp","components_Register","withRouter","ReactDOM","BrowserRouter","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.28aa6245.chunk.js","sourcesContent":["// Register.js\n// provides a way for a user to sign up for an account with the Django server\n\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n        // Intializes state for username, two password fields, \n        // input type and show/hide boolean for those fields\n        this.state = {\n            username: '',\n            password1: '',\n            password2: '',\n            password1Tag: 'Show',\n            password2Tag: 'Show',\n            password1State: 'password',\n            password2State: 'password'\n        }\n    }\n\n    // Sets state for username and password fields\n    changeHandler = (event) => {\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    // Toggles the text and input type of the first password field to show or hide\n    password1Toggle = () => {\n        this.state.password1Tag === 'Show' ? this.setState({password1Tag: 'Hide'}) : this.setState({password1Tag: 'Show'})\n        this.state.password1State === 'password' ? this.setState({password1State: 'text'}) : this.setState({password1State: 'password'})\n    }\n\n    // Toggles the text and input type of the second password field to show or hide\n    password2Toggle = () => {\n        this.state.password2Tag === 'Show' ? this.setState({password2Tag: 'Hide'}) : this.setState({password2Tag: 'Show'})\n        this.state.password2State === 'password' ? this.setState({password2State: 'text'}) : this.setState({password2State: 'password'})\n    }\n\n    // Submits the registration form if the passwords match\n    submitRegister = (event) => {\n        event.preventDefault();\n        if (this.state.password1 === this.state.password2) {\n            axios.post('https://lambdamud-ghr.herokuapp.com/api/registration/', {\n                username: this.state.username, \n                password1: this.state.password1, \n                password2: this.state.password2\n            })\n            // Calls the App.js login function\n            .then(response => {\n                console.log(response.data)\n                this.props.login(response.data.key, this.state.username)\n            })\n            .catch(error => {\n                console.log(error.response)\n                alert(error.response.data.error)\n            })\n            // Moves to the game component\n            this.props.history.push('/');\n        } else {\n            // Pops up alert if passwords do not match\n            alert('The passwords do not match.')\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"registerBody\">\n                \n                <h1>Please register</h1>\n                {/* Form with fields for username and two password entries */}\n                <form onSubmit={this.submitRegister} className=\"registerForm\">\n                    <div>\n                        Username\n                        <input type=\"text\" name=\"username\" placeholder=\"Username\" value={this.state.username} onChange={this.changeHandler}></input>\n                    </div>\n                    <div>\n                        Password\n                        <input type={this.state.password1State} name=\"password1\" placeholder=\"Password\" value={this.state.password1} onChange={this.changeHandler}></input>\n                        <button onClick={this.password1Toggle} type=\"button\">{this.state.password1Tag}</button>\n                    </div>\n                    <div>\n                        Password, again\n                        <input type={this.state.password2State} name=\"password2\" placeholder=\"Password, again\" value={this.state.password2} onChange={this.changeHandler}></input>\n                        <button onClick={this.password2Toggle} type=\"button\">{this.state.password2Tag}</button>\n                    </div>\n                    <button type=\"submit\">Submit</button>\n                </form>\n                <h1>Log in instead</h1>\n                <Link to=\"/login\">Log in</Link>\n            </div>\n        )\n\n    }\n    \n}\n\nexport default Register;","// Game.js\n// Implements a game display and shows messages from the Django server and the Pusher server.\n\nimport React from 'react';\nimport Pusher from 'pusher-js';\nimport axios from 'axios';\n\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props)\n        // Initializes state: input field, player name, a log of rooms and messages, \n        // player's UUID, a boolean of whether Pusher channel has been subscribed to\n        this.state = {\n            input: '',\n            name: '',\n            movesLog: [],\n            uuid: null,\n            channelSubbed: false,\n            currentRoom: '',\n            flickerClass: 'printList crt',\n            isFlickering: true,\n            flickerTag: 'off'\n        }\n        this.channel = null;\n        \n    }\n\n    componentDidMount = () => {\n        // Gets token from localStorage\n        const token = localStorage.getItem('token');\n        // Makes call to Django server to initialize the player in the game\n        axios.get('https://lambdamud-ghr.herokuapp.com/api/adv/init/', {headers: {Authorization: `Token ${token}`}})\n        .then(response => {\n            // Sets state with data received from axios call\n            this.setState({\n                name: response.data.name,\n                movesLog: [{\n                    title: response.data.title,\n                    description: response.data.description,\n                    players: response.data.players,\n                }],\n                uuid: response.data.uuid,\n                currentRoom: response.data.title\n            })\n            // Instantiates a new Pusher object\n            const pusher = new Pusher('990ddef61491c8ebceb4', {\n                cluster: 'us2'\n            })\n            // Subscribes channel to Pusher if UUID is present\n            if (this.state.uuid) {\n                this.channel = pusher.subscribe(`p-channel-${this.state.uuid}`, this.state.uuid);\n            }\n            // Sets boolean on state that Pusher channel has been subscribed\n            this.setState({channelSubbed: true})\n            if (this.state.channelSubbed) {\n                // Binds channel to receive broadcast messages\n                this.channel.bind('broadcast', data => {\n                    this.setState({movesLog: [...this.state.movesLog, {message: data.message}]}\n                )})\n            }\n            \n        })\n        \n    }\n    // Parses commands from the input field\n    parseCommand = (event) => {\n        event.preventDefault();\n        // These first four conditionals handle move directions\n        if (this.state.input.toLowerCase() === 'n' || this.state.input.toLowerCase() === 'north') {\n            this.handleMove('n')\n        } else if (this.state.input.toLowerCase() === 's' || this.state.input.toLowerCase() === 'south') {\n            this.handleMove('s')\n        } else if (this.state.input.toLowerCase() === 'e' || this.state.input.toLowerCase() ==='east') {\n            this.handleMove('e')\n        } else if (this.state.input.toLowerCase() === 'w' || this.state.input.toLowerCase() === 'west') {\n            this.handleMove('w')\n        // Handles say function\n        } else if (this.state.input.toLowerCase().startsWith('say')) {\n            this.handleSay(this.state.input.slice(4))\n        } else if (this.state.input.toLowerCase().startsWith('shout')) {\n            this.handleShout(this.state.input.slice(6))\n        } else if (this.state.input.toLowerCase().startsWith('whisper')) {\n            const whisperArr = this.state.input.split(' ');\n            console.log(whisperArr[1])\n            const whisperMinus = this.state.input.split(' ');\n            whisperMinus.shift();\n            whisperMinus.shift();\n            const message = whisperMinus.join(' ');\n            this.handleWhisper(message, whisperArr[1])\n        } else if (this.state.input.toLowerCase() === 'h' || this.state.input.toLowerCase() === 'help') {\n            this.handleHelp()\n        } else if (this.state.input.toLowerCase() === 'map') {\n            this.handleMap()\n        }\n        // Resets input field to blank string when form is submitted\n        this.setState({input: ''})\n    }\n\n    // Handles move function in any of four directions\n    handleMove = (direction) => {\n        // Gets token from localStorage\n        const token = localStorage.getItem('token');\n        const headers = {\n            \"Authorization\": `Token ${token}`, \n            \"Content-Type\": \"application/json\"\n        }\n        const data = {\n            \"direction\": direction\n        }\n        // Sends axios call to move endpoint with direction data and auth/content headers\n        axios.post('https://lambdamud-ghr.herokuapp.com/api/adv/move/', data, {headers: headers})\n        .then(response => {\n            this.setState({\n                movesLog: [...this.state.movesLog, {\n                    title: response.data.title,\n                    description: response.data.description,\n                    players: response.data.players,\n                    error: response.data.error_msg\n                }],\n                currentRoom: response.data.title\n            })\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }\n\n    // Handles sending messages to players in current room\n    handleSay = (message) => {\n        const token = localStorage.getItem('token');\n        const headers = {\n            \"Authorization\": `Token ${token}`, \n            \"Content-Type\": \"application/json\"\n        }\n        const data = {\n            \"message\": message\n        }\n        // Sends axios call to say endpoint with message data and auth/content headers\n        axios.post('https://lambdamud-ghr.herokuapp.com/api/adv/say/', data, {headers: headers})\n        .then(response => {\n            this.setState({\n                movesLog: [...this.state.movesLog, {\n                    message: response.data.message,\n                    players: [this.state.name]\n                }]\n            })\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }\n\n    handleShout = (message) => {\n        const token = localStorage.getItem('token');\n        const headers = {\n            \"Authorization\": `Token ${token}`, \n            \"Content-Type\": \"application/json\"\n        }\n        const data = {\n            \"message\": message\n        }\n        // Sends axios call to say endpoint with message data and auth/content headers\n        axios.post('https://lambdamud-ghr.herokuapp.com/api/adv/shout/', data, {headers: headers})\n        .then(response => {\n            this.setState({\n                movesLog: [...this.state.movesLog, {\n                    message: response.data.message,\n                }]\n            })\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }\n\n    handleWhisper = (message, toUser) => {\n        const token = localStorage.getItem('token');\n        const headers = {\n            \"Authorization\": `Token ${token}`, \n            \"Content-Type\": \"application/json\"\n        }\n        const data = {\n            \"message\": message,\n            \"toUser\": `${toUser}`,\n            \"test\": 'anything'\n        }\n        // Sends axios call to say endpoint with message data and auth/content headers\n        axios.post('https://lambdamud-ghr.herokuapp.com/api/adv/whisper/', data, {headers: headers})\n        .then(response => {\n            this.setState({\n                movesLog: [...this.state.movesLog, {\n                    message: response.data.message,\n                }]\n            })\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }\n\n    handleHelp = () => {\n        this.setState({\n            movesLog: [...this.state.movesLog, {\n                title: 'Help',\n                description: 'To move North, type \"n\" or \"north\". To move South, type \"s\" or \"south\". To move East, type \"e\" or \"east\". To move West, type \"w\" or \"west\". To say something to players in your current room, type \"say <something>\". To shout to all players in the game, type \"shout <something>\". To whisper something to one player, type \"whisper <person> <something>\". To see the map, type \"map\".'\n            }]\n        })\n    }\n\n    handleMap = () => {\n        this.setState({\n            movesLog: [...this.state.movesLog, {\n                title: 'Map',\n                description: \n                <div className=\"mapContainer\">\n                    <div className=\"mapRow1\"><div className={this.state.currentRoom === \"Sandy Beach\" ? \"mapBox mapBoxHighlighted\" : \"mapBox\"}>Sandy Beach</div><div className=\"horizMapLine\"></div><div className={this.state.currentRoom === \"Glimmering Lighthouse\" ? \"mapBox mapBoxHighlighted\" : \"mapBox\"}>Glimmering Lighthouse</div><div className=\"horizMapLine\"></div><div className={this.state.currentRoom === \"Hidden Room\" ? \"mapBox mapBoxHighlighted\" : \"mapBox\"}>Hidden Room</div></div>\n                    <div className=\"mapRow2\"><div className=\"mapBoxBlankShort\"></div><div className=\"horizMapLineBlank\"></div><div className=\"mapBoxBlankShort\"></div><div className=\"horizMapLineBlank\"></div><div className=\"vertMapLineSpecial\"></div></div>\n                    <div className=\"mapRow3\"><div className=\"mapBoxBlank\"></div><div className=\"horizMapLineBlank\"></div><div className={this.state.currentRoom === \"Grand Overlook\" ? \"mapBox mapBoxHighlighted\" : \"mapBox\"}>Grand Overlook</div><div className=\"horizMapLineBlank\"></div><div className={this.state.currentRoom === \"Treasure Chamber\" ? \"mapBox mapBoxHighlighted\" : \"mapBox\"}>Treasure Chamber</div></div>\n                    <div className=\"mapRow4\"><div className=\"mapBoxBlankShort\"></div><div className=\"horizMapLineBlank\"></div><div className=\"vertMapLine\"></div><div className=\"mapBoxBlankShortSquished\"></div><div className=\"vertMapLine\"></div></div>\n                    <div className=\"mapRow5\"><div className=\"mapBoxBlank\"></div><div className=\"horizMapLineBlank\"></div><div className={this.state.currentRoom === \"Foyer\" ? \"mapBox mapBoxHighlighted\" : \"mapBox\"}>Foyer</div><div className=\"horizMapLine\"></div><div className={this.state.currentRoom === \"Narrow Passage\" ? \"mapBox mapBoxHighlighted\" : \"mapBox\"}>Narrow Passage</div></div>\n                    <div className=\"mapRow6\"><div className=\"mapBoxBlankShort\"></div><div className=\"horizMapLineBlank\"></div><div className=\"vertMapLine\"></div><div className=\"horizMapLineBlank\"></div><div className=\"mapBoxBlankShort\"></div></div>\n                    <div className=\"mapRow7\"><div className=\"mapBoxBlank\"></div><div className=\"horizMapLineBlank\"></div><div className={this.state.currentRoome === \"Outside Cave Entrance\" ? \"mapBox mapBoxHighlighted\" : \"mapBox\"}>Outside Cave Entrance</div><div className=\"horizMapLineBlank\"></div><div className=\"mapBoxBlank\"></div></div>\n                </div>\n            }]\n        })\n    }\n\n    // Updates input field in state\n    changeHandler = (event) => {\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    toggleFlicker = () => {\n        this.state.isFlickering ? this.setState({isFlickering: false, flickerClass: 'printList', flickerTag: 'on'}) : this.setState({isFlickering: true, flickerClass: 'printList crt', flickerTag: 'off'})\n    }\n\n    render () {\n        // Reverses movesLog for display\n        const history = this.state.movesLog.slice().reverse();\n        console.log(this.state.movesLog)\n        return (\n            <div>\n                <div className=\"gameBox\">\n                {/* Displays player's username */}\n                <p>Welcome, {this.state.name}</p>\n                <div className={this.state.flickerClass}>\n                    {/* Maps over reversed movesLog and displays what is present in that move */}\n                    {history.map(move => \n                    <div>\n                        {move.title ? <h4 className=\"titleH4\">{move.title}</h4> : ''}\n                        {move.description ? <p className=\"descP\">{move.description}</p> : ''}\n                        {/* Displays players if they are in the room and nothing if none are present. */}\n                        {move.players ? move.players.length ? <p className=\"playersP\">Players: {move.players.join(', ')}</p> : '' : ''}\n                        {move.message ? <p className=\"messageP\">{move.message}</p> : ''}\n                        {move.error ? <p className=\"errorP\">{move.error}</p> : ''}\n                    </div>\n                    )}\n                </div>\n                {/* Form for input field and submit button */}\n                <form onSubmit={this.parseCommand} className=\"inputAndButton\">\n                    <input type=\"text\" \n                    name=\"input\" \n                    value={this.state.input} \n                    placeholder=\"Type a direction or command or message here.\" \n                    onChange={this.changeHandler} \n                    className=\"gameInput\"\n                    autocomplete=\"off\"/>\n                    <button type=\"submit\" className=\"gameSubmit\">Submit</button>\n                </form>\n\n                <button type=\"button\" onClick={this.toggleFlicker}>Turn screen flicker {this.state.flickerTag}</button>\n                <button type=\"button\" onClick={this.props.logout}>Log out</button>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default Game;","// Authenticate.js\n// Provides a login function that displays if the user is not logged in.\n\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n// Pass in an app\nconst Authenticate = App => \n    class extends React.Component {\n        constructor(props) {\n            super(props);\n            // Initializes state for username, password, field type of password, and text of password show/hide button\n            this.state = {\n                username: '',\n                password: '',\n                passwordState: 'password',\n                passwordTag: 'Show'\n            }\n        }\n\n        // Sets state for username and password fields\n        changeHandler = (event) => {\n            this.setState({[event.target.name]: event.target.value})\n        }\n\n        // Toggles the text and input type of the password field to show or hide\n        passwordToggle = () => {\n            this.state.passwordTag === 'Show' ? this.setState({passwordTag: 'Hide'}) : this.setState({passwordTag: 'Show'})\n            this.state.passwordState === 'password' ? this.setState({passwordState: 'text'}) : this.setState({passwordState: 'password'})\n        }\n\n        // Logs in with the credentials provided to the Django server\n        handleLogin = (event) => {\n            event.preventDefault();\n            axios.post('https://lambdamud-ghr.herokuapp.com/api/login/', {\n                username: this.state.username,\n                password: this.state.password\n            })\n            // Calls passed-in login function from App.js\n            .then(response => {\n                this.props.login(response.data.key, this.state.username)\n                if (response.data.key) {\n                    // Moves page to game component\n                    this.props.history.push('/');\n                }\n            })\n            .catch(error => {\n                console.log(error.response)\n                alert(error.response.data.error)\n            })\n        }\n\n        render() {\n            return (\n                <div className=\"loginBody\">\n                    \n                    <h1>Please log in</h1>\n                    {/* Form for inputting username and password */}\n                    <form onSubmit={this.handleLogin} className=\"loginForm\">\n                        <div>\n                            Username\n                            <input type=\"text\" name=\"username\" placeholder=\"Username\" value={this.state.username} onChange={this.changeHandler} />\n                        </div>\n                        <div>\n                            Password\n                            <input type={this.state.passwordState} name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.changeHandler}/>\n                            <button type=\"button\" onClick={this.passwordToggle}>{this.state.passwordTag}</button>\n                        </div>\n                        <button type=\"submit\">Submit</button>\n                    </form>\n                    <h1>Register instead</h1>\n                    <Link to=\"/register\">Register</Link>\n                </div>\n            )\n        }\n    }\n\nexport default Authenticate;","// App.js\n// Parent component that has routes to different children components\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Route, withRouter } from 'react-router-dom';\nimport Register from './components/Register';\nimport Game from './components/Game';\nimport Authenticate from './components/Authenticate';\n\nclass App extends Component {\n  constructor() {\n    super();\n    // Initializes state for loggedIn boolean\n    this.state = {\n      loggedIn: false\n    }\n  }\n\n  // Gets token and username from localStorage, if both are present, sets state that loggedIn is true\n  // Pushes page to game component if logged in\n  // Pushes page to login component otherwise\n  componentDidMount = () => {\n    let token = localStorage.getItem('token');\n    let username = localStorage.getItem('username');\n    if (token && username) {\n      this.setState({loggedIn: true})\n      this.props.history.push('/')\n    } else {\n      this.setState({loggedIn: false})\n      this.props.history.push('/login')\n    }\n    \n  }\n\n  // Handles login by setting items in localStorage and state\n  handleLogin = (token, username) => {\n    localStorage.setItem('token', token)\n    localStorage.setItem('username', username)\n    this.setState({loggedIn: true})\n  }\n\n  // Handles logout by removing items from localStorage and setting state, pushing to login component\n  handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    this.props.history.push('/login')\n    this.setState({loggedIn: false})\n  }\n\n  render() {\n    // If logged in show this return div\n    if (this.state.loggedIn) {\n      return (\n        <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>LambdaMUD - GHR</h1>\n          {/* Show game route */}\n          <Route path=\"/\" render={props => <Game {...props} logout={this.handleLogout} />} />\n        </header>\n      </div>\n    );\n  } else { // If logged out go to login and register components\n    return (\n      <div>\n      <Route path=\"/login\" render={props => <AuthenticatedApp {...props} login={this.handleLogin} />} />\n      <Route path=\"/register\" render={(props) => <Register {...props} login={this.handleLogin}/>} />\n      </div>\n    )\n  }\n  }\n}\n\n// Pass in App to Authenticate component\nconst AuthenticatedApp = Authenticate(App)\n\n// Use withRouter to be able to access this.props.history.push in App.js\nexport default withRouter(App);\n","// index.js\n// Base component, parent of App.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(\n    // Wrap App in Router\n    <Router>\n    <App />\n    </Router>, document.getElementById('root'));\n\n"],"sourceRoot":""}