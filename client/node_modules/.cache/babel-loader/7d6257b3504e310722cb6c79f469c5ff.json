{"ast":null,"code":"import _defineProperty from \"/Users/Huff/Desktop/LambdaMUD-Client/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Huff/Desktop/LambdaMUD-Client/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Huff/Desktop/LambdaMUD-Client/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Huff/Desktop/LambdaMUD-Client/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Huff/Desktop/LambdaMUD-Client/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Huff/Desktop/LambdaMUD-Client/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Huff/Desktop/LambdaMUD-Client/client/src/components/rooms/rooms.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./rooms.css\";\nimport Pusher from \"pusher-js\"; // Room handles the \"game\" portion of the app. it holds the players whereabouts and allows for movement and \"say\" functionality\n\nvar Room =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Room, _Component);\n\n  function Room() {\n    var _this;\n\n    _classCallCheck(this, Room);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Room).call(this));\n\n    _this.handleInput = function (event) {\n      _this.setState(_defineProperty({}, event.target.id, event.target.value));\n    };\n\n    _this.init = function () {\n      var header = {\n        Authorization: \"Token \".concat(_this.state.key)\n      };\n      axios.get(\"https://mudlambdahuthman.herokuapp.com/api/adv/init/\", {\n        headers: header\n      }).then(function (response) {\n        _this.setState({\n          room: response.data\n        });\n\n        _this.setState({\n          uuid: response.data.uuid\n        });\n\n        _this.pusher();\n      }).catch(function (error) {\n        console.log(error.response);\n      });\n    };\n\n    _this.pusher = function () {\n      var pusher = new Pusher(\"d0fbd4482a84b15b839e\", {\n        cluster: \"us2\"\n      });\n      var channel = pusher.subscribe(\"p-channel-\".concat(_this.state.uuid));\n      channel.bind(\"broadcast\", function (data) {\n        alert(data.message);\n      });\n      Pusher.logToConsole = true;\n    };\n\n    _this.move = function (direction) {\n      var header = {\n        Authorization: \"Token \".concat(_this.state.key),\n        \"Content-Type\": \"application/json\"\n      };\n      axios.post(\"https://mudlambdahuthman.herokuapp.com/api/adv/move/\", {\n        direction: direction\n      }, {\n        headers: header\n      }).then(function (response) {\n        _this.setState({\n          room: response.data\n        });\n      }).catch(function (error) {\n        alert(error.response.data.error);\n      });\n    };\n\n    _this.say = function (msg) {\n      var header = {\n        Authorization: \"Token \".concat(_this.state.key),\n        \"Content-Type\": \"application/json\"\n      };\n      axios.post(\"https://mudlambdahuthman.herokuapp.com/api/adv/say/\", {\n        message: msg\n      }, {\n        headers: header\n      }).then(function (response) {\n        console.log(response.data);\n      }).catch(function (error) {\n        console.log(error.response);\n        alert(\"No one is around to hear...\");\n      });\n\n      _this.setState({\n        msg: \"\"\n      });\n    };\n\n    _this.state = {\n      room: null,\n      key: localStorage.getItem(\"key\"),\n      msg: \"\",\n      err: \"\",\n      uuid: null,\n      chat: []\n    };\n    return _this;\n  }\n  /* upon first load initialize the players room */\n\n\n  _createClass(Room, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (localStorage.getItem(\"key\")) {\n        this.init();\n      }\n    }\n    /* simple input handler */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, this.state.room ? React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"player\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"In this room: \", this.state.room.name, this.state.room.players.map(function (p) {\n        return \", \".concat(p);\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, this.state.room.title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, this.state.room.description), React.createElement(\"div\", {\n        className: \"directions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dir-btn\",\n        onClick: function onClick() {\n          return _this2.move(\"n\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"North\"), React.createElement(\"div\", {\n        className: \"dir-btn\",\n        onClick: function onClick() {\n          return _this2.move(\"e\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"East\"), React.createElement(\"div\", {\n        className: \"dir-btn\",\n        onClick: function onClick() {\n          return _this2.move(\"s\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"South\"), React.createElement(\"div\", {\n        className: \"dir-btn\",\n        onClick: function onClick() {\n          return _this2.move(\"w\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"West\")), React.createElement(\"div\", {\n        className: \"chat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, this.state.room.name, \":\"), \" \", React.createElement(\"input\", {\n        value: this.state.msg,\n        onChange: this.handleInput,\n        id: \"msg\",\n        placeholder: \" message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: function onClick() {\n          return _this2.say(_this2.state.msg);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"enter\"))) : localStorage.getItem(\"key\") ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"loading...\") : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"please log in to play\"));\n    }\n  }]);\n\n  return Room;\n}(Component);\n\nexport default Room;","map":{"version":3,"sources":["/Users/Huff/Desktop/LambdaMUD-Client/client/src/components/rooms/rooms.js"],"names":["React","Component","axios","Pusher","Room","handleInput","event","setState","target","id","value","init","header","Authorization","state","key","get","headers","then","response","room","data","uuid","pusher","catch","error","console","log","cluster","channel","subscribe","bind","alert","message","logToConsole","move","direction","post","say","msg","localStorage","getItem","err","chat","name","players","map","p","title","description"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./rooms.css\";\nimport Pusher from \"pusher-js\";\n // Room handles the \"game\" portion of the app. it holds the players whereabouts and allows for movement and \"say\" functionality\n class Room extends Component {\n  constructor() {\n    super();\n    this.state = {\n      room: null,\n      key: localStorage.getItem(\"key\"),\n      msg: \"\",\n      err: \"\",\n      uuid: null,\n      chat: []\n    };\n  }\n   /* upon first load initialize the players room */\n  componentDidMount() {\n    if (localStorage.getItem(\"key\")) {\n      this.init();\n    }\n  }\n   /* simple input handler */\n  handleInput = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  };\n   /* game initializer: sends a get request and saves the player's \n     room/details to state, specifically saves uuid to state.\n     calls pusher to initialize that as well */\n  init = () => {\n    const header = {\n      Authorization: `Token ${this.state.key}`\n    };\n    axios\n      .get(\"https://mudlambdahuthman.herokuapp.com/api/adv/init/\", { headers: header })\n      .then(response => {\n        this.setState({ room: response.data });\n        this.setState({ uuid: response.data.uuid });\n        this.pusher();\n      })\n      .catch(error => {\n        console.log(error.response);\n      });\n  };\n   /* establishes connection to pusher using the players uuid stored on state */\n  pusher = () => {\n    const pusher = new Pusher(\"d0fbd4482a84b15b839e\", {\n      cluster: \"us2\"\n    });\n    const channel = pusher.subscribe(`p-channel-${this.state.uuid}`);\n    channel.bind(\"broadcast\", function(data) {\n      alert(data.message);\n    });\n    Pusher.logToConsole = true;\n  };\n   /* sends a post request that includes a direction, refreshes state\n     with the new room information */\n  move = direction => {\n    const header = {\n      Authorization: `Token ${this.state.key}`,\n      \"Content-Type\": \"application/json\"\n    };\n    axios\n      .post(\n        \"https://mudlambdahuthman.herokuapp.com/api/adv/move/\",\n        { direction: direction },\n        { headers: header }\n      )\n      .then(response => {\n        this.setState({ room: response.data });\n      })\n      .catch(error => {\n        alert(error.response.data.error);\n      });\n  };\n   /* sends a post request that includes a message from the player. if other players\n    are in the room they recieve a pusher notifiation with the message, if not\n    the player recieves an alert that there is no one to message */\n  say = msg => {\n    const header = {\n      Authorization: `Token ${this.state.key}`,\n      \"Content-Type\": \"application/json\"\n    };\n    axios\n      .post(\n        \"https://mudlambdahuthman.herokuapp.com/api/adv/say/\",\n        { message: msg },\n        { headers: header }\n      )\n      .then(response => {\n        console.log(response.data);\n      })\n      .catch(error => {\n        console.log(error.response)\n        alert(\"No one is around to hear...\");\n      });\n      this.setState({msg: \"\"})\n  };\n   render() {\n    return (\n      <div>\n        {this.state.room ? (\n          <div className=\"game\">\n            <p className=\"player\">\n              In this room: {this.state.room.name}\n              {this.state.room.players.map(p => `, ${p}`)}\n            </p>\n            <p>{this.state.room.title}</p>\n            <p>{this.state.room.description}</p>\n            <div className=\"directions\">\n          <div className=\"dir-btn\" onClick={() => this.move(\"n\")}>\n            North\n          </div>\n          <div className=\"dir-btn\" onClick={() => this.move(\"e\")}>\n            East\n          </div>\n          <div className=\"dir-btn\" onClick={() => this.move(\"s\")}>\n            South\n          </div>\n          <div className=\"dir-btn\" onClick={() => this.move(\"w\")}>\n            West\n          </div>\n        </div>\n            <div className=\"chat\">\n              {/* was going to keep a record of messages but may scrap\n              <div>\n                {this.state.chat.map(msg => (\n                  <p>{msg}</p>\n                ))}\n              </div> */}\n              <span>{this.state.room.name}:</span>{\" \"}\n              <input\n                value = {this.state.msg}\n                onChange={this.handleInput}\n                id=\"msg\"\n                placeholder=\" message\"\n              />\n              <button type=\"submit\" onClick={() => this.say(this.state.msg)}>\n                enter\n              </button>\n            </div>\n          </div>\n        ) : localStorage.getItem(\"key\") ? (\n          <p>loading...</p>\n        ) : (<p>please log in to play</p>)}\n      </div>\n    );\n  }\n}\n export default Room;"]},"metadata":{},"sourceType":"module"}